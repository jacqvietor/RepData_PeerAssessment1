install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
install.packages('ggplot2', dep = TRUE)
library("swirl")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(pollution,ppm)
play()
help(quantile)
nxt()
quantile(ppm)
boxplot(ppm,col='blue")
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
sbset(pollution,region=="east")
subset(pollution,region=="east")
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
west <- subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25, col = "green")
bye()
q()
library("swirl")
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality, col ="red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind,data=airquality,pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind|Month, data=airquality,layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("Plot1.R",local=TRUE)
)
source(pathtofile("plot1.R"),local=TRUE))
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain
)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
q()
library("swirl")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
point(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1, pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,pch=9,cex=2,lwd=2,col=cols1)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*diag*t(matv)
matu%*%diag%*%t(matv)
sdv(scale(mat))
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
sdv2$d
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd$d
svd2$d
dim(faceData)
a1 <- (svd1$u[,1])%*%(svd1$d[1])%*%svd1$v
a1 <- (svd1$u[,1]%*%svd1$d[1])%*%svd1$v
a1 <- svd1$u[,1]%*%svd1$v*svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- diag(svd1$u[,1:2] %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
)
a2 <- diag(svd1$u[,1:2]) %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$d[,1:2] %*% t(svd1$v[,1:2]) %*%  diag(svd1$u[,1:2])
a2 <- svd1$d[1:2] %*% t(svd1$v[,1:2]) %*%  diag(svd1$u[,1:2])
a2 <- svd1$d[1:2,] %*% t(svd1$v[,1:2]) %*%  diag(svd1$u[,1:2])
a2 <- svd1$d[:2] %*% t(svd1$v[,1:2]) %*%  diag(svd1$u[,1:2])
a2 <- svd1$d[1] %*% t(svd1$v[,1:2]) %*%  diag(svd1$u[,1:2])
a2 <- svd1$d[1] %*% t(svd1$v)[,1:2] %*%  diag(svd1$u[,1:2])
a2 <- diag(svd1$u[1:2]) %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
q()
setwd("D:/gitdir/ReproducibleResearch/Project1/RepData_PeerAssessment1")
activity <- read.csv("D:/gitdir/ReproducibleResearch/Project1/RepData_PeerAssessment1/activity/activity.csv")
View(activity)
nrows(activity)
nrow(activity)
activity$tmp <- strptime(activity$date,"%Y-%m-%d")
activity$dt <- format(activity$tmp,"%Y%m%d")
stepsPerDay <- as.vector(aggregate(steps ~ dt, activity, sum))
View(stepsPerDay)
barplot(stepsPerDay$steps, names.arg=stepsPerDay$dt, xlab="Date", ylab="total # steps")
mean(stepsPerDay$steps)
median(stepsPerDay$steps)
table(activity$interval)
stepsPerInterval <- as.vector(aggregate(steps ~ interval, activity, sum))
View(stepsPerInterval)
sum(stepsPerInterval$steps)
sum(stepsPerDay$steps)
unique(activity.dt)
unique(activity$dt)
days <- nrow(unique(activity$dt))
days = nrow(unique(activity$dt))
days <- unique(activity$dt)
UniqueDays <- unique(activity$dt)
nrDays <- nrow(uniqueDays)
nrDays <- nrow(UniqueDays)
nrDays <- length(UniqueDays)
nrDays <- int(length(UniqueDays))
barplot(stepsPerInterval$steps, names.arg=stepsPerInterval$interval/nrDays, xlab="Interval", ylab="total # steps per day")
stepsPerInterval$avgSteps <- (stepsPerInterval$steps)/nrDays
barplot(stepsPerInterval$avgSteps, names.arg=stepsPerInterval$interval, xlab="Interval", ylab="avg # steps per day")
max(stepsPerInterval$avgSteps)
maxAvg <- max(stepsPerInterval$avgSteps)
maxInt <- stepsPerInterval[avgSteps == maxAvg]
maxInt <- stepsPerInterval[,avgSteps == maxAvg]
maxInt <- stepsPerInterval[stepsPerInterval$avgSteps == maxAvg]
stepsPerInterval[stepsPerInterval$avgSteps == maxAvg,]
maxRec <- stepsPerInterval[stepsPerInterval$avgSteps == max(stepsPerInterval$avgSteps),]
maxRec$interval
noSteps <- is.na(activity$steps)
noSteps <- is.na(activity$steps)
nosteps
noSteps
table(noSteps)
naRecords <- activity[noSteps]
naRecords <- activity[noSteps,]
View(naRecords)
lenght(naRecords)
length(naRecords)
nrow(naRecords)
newRecords <- merge(NArecords,stepsPerInterval, by="interval")
NAsteps <- is.na(activity$steps)
NAsteps
NArecords <- activity[NAsteps,]
nrow(NArecords)
newRecords <- merge(NArecords,stepsPerInterval, by="interval")
View(newRecords)
newActivity <- newRecords[,c(7,3,1,4,5)]
View(newActivity)
View(activity)
View(newActivity)
names(newActivity)[1] <- "steps"
View(newActivity)
OKrecords <- activity[!NAsteps,]
nrow(OKrecords)
transform(activity$steps = as.numeric(activity$steps))
activity$steps <- as.numeric(activity$steps)
View(activity)
OKrecords$steps <- as.numeric(OKrecords$steps)
OKrecords <- activity[!NAsteps,]
nrow(OKrecords)
newRecords <- merge(NArecords,stepsPerInterval, by="interval")
newActivity <- newRecords[,c(7,3,1,4,5)]
names(newActivity)[1] <- "steps"
activity <- read.csv("D:/gitdir/ReproducibleResearch/Project1/RepData_PeerAssessment1/activity/activity.csv")
NAsteps <- is.na(activity$steps)
NAsteps
NArecords <- activity[NAsteps,]
nrow(NArecords)
OKrecords <- activity[!NAsteps,]
nrow(OKrecords)
View(OKrecords)
newRecords <- merge(NArecords,stepsPerInterval, by="interval")
newActivity <- newRecords[,c(7,3,1,4,5)]
names(newActivity)[1] <- "steps"
OKrecords$steps <- as.numeric(OKrecords$steps)
newActivity <- rbind(newActivity,OKrecords)
View(OKrecords)
activity$tmp <- strptime(activity$date,"%Y-%m-%d")
activity$dt <- format(activity$tmp,"%Y%m%d")
OKrecords <- activity[!NAsteps,]
newActivity <- rbind(newActivity,OKrecords)
newStepsPerDay <- as.vector(aggregate(steps ~ dt, newActivity, sum))
barplot(newStepsPerDay$steps, names.arg=newStepsPerDay$dt, xlab="Date", ylab="total # steps per day")
mean(newStepsPerDay$steps)
median(newStepsPerDay$steps)
mean(stepsPerDay$steps)
median(stepsPerDay$steps)
newActivity$daynr <- tmp$wday
newActivity$daynr <- newActivity$tmp$wday
table(newActivity$daynr)
weekend <- newActivity[,newActivity$daynr==0 | newActivity$daynr==6 ]
weekend <- newActivity[newActivity$daynr==0 | newActivity$daynr==6 ,]
weekend <- newActivity[newActivity$daynr==0 | newActivity$daynr==6 ,]
weekday <- newActivity[newActivity$daynr>0 & newActivity$daynr<6 ,]
weekend$day <- "weekend"
weekday$day <- "weekday"
ActivityDayType <- rbind(weekend,weekday)
View(ActivityDayType)
weekendSPI <- as.vector(aggregate(steps ~ interval, weekend, sum))
weekendSPI$avgSteps <- (weekendSPI$steps)/nrDays
View(weekendSPI)
weekday <- newActivity[newActivity$daynr>0 & newActivity$daynr<6 ,]
weekdaySPI <- as.vector(aggregate(steps ~ interval, weekday, sum))
weekdaySPI$avgSteps <- (weekdaySPI$steps)/nrDays
weekday$day <- "weekday"
ActivityWeek <- rbind(weekend,weekday)
xyplot(avgSteps ~ interval| day, data=ActivityWeek, layout = c(1,2))
library(lattice)
xyplot(avgSteps ~ interval| day, data=ActivityWeek, layout = c(1,2))
weekendSPI$day <- "weekend"
View(weekdaySPI)
View(weekendSPI)
View(weekdaySPI)
weekendSPI$day <- "weekend"
weekdaySPI$day <- "weekday"
ActivityWeek <- rbind(weekendSPI,weekdaySPI)
library(lattice)
xyplot(avgSteps ~ interval| day, data=ActivityWeek, layout = c(1,2))
View(ActivityWeek)
